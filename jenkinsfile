
pipeline {
 agent any
 environment {
 AWS_ACCOUNT_ID="270311159384"
 AWS_DEFAULT_REGION="ap-south-1"
 IMAGE_REPO_NAME="myrepo"
 IMAGE_TAG="latest"
 REPOSITORY_URI = "${2703111159384}.dkr.ecr.${ap-south-1}.amazonaws.com/${myrepo}"
 }
 
 stages {
 
 stage('Logging into AWS ECR') {
 steps {
 script {
 sh "aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 270311159384.dkr.ecr.ap-south-1.amazonaws.com"
 
 }
 }
 
 stage('Cloning Git') {
 steps {
 checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/ramyadhanam/gitrepo28.git']]]) 
 }
 }
 
 // Building Docker images
 stage('Building image') {
 steps{
 script {
 dockerImage = docker.build "${httpd}:${latest}"
 }
 }
 }
 
 // Uploading Docker images into AWS ECR
 stage('Pushing to ECR') {
 steps{ 
 script {
 sh "docker tag myrepo:latest 270311159384.dkr.ecr.ap-south-1.amazonaws.com/myrepo:latest"
 sh "docker push 270311159384.dkr.ecr.ap-south-1.amazonaws.com/myrepo:latest"
 }
 }
 }
 }
}
